
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu exec wofi --show drun --term $term
set $menu fuzzel

### Output configuration
output * bg /home/karet/.config/Wallpapers/win.jpg fill

### Input configuration
#
input "2:14:SynPS/2_Synaptics_TouchPad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Setting up monitor layout
set $laptop_mon eDP-1
set $lab_mon HDMI-A-1

output $laptop_mon pos 1366 0
output $lab_mon pos 0 0 res 1366x768

workspace 1 output $laptop_mon
workspace 2 output $laptop_mon
workspace 3 output $laptop_mon
workspace 4 output $laptop_mon
workspace 7 output $lab_mon
workspace 8 output $lab_mon
workspace 9 output $lab_mon
workspace 10 output $lab_mon

# Remove titebar for each window 
default_border none
default_floating_border none
font pango:monospace 0
titlebar_padding 1
titlebar_border_thickness 0

# On startup 

# Launch apps
exec firefox-wayland
exec firefox-wayland -P karet

# Notification Daemon
exec --no-startup-id swaync

# Add gaps between windows showing the wallpaper behind
gaps inner 4

### Key bindings
# Basics:
#
    # Lock screen using swaylock
    bindsym $mod+x exec swaylock 

    # Start a terminal
    bindsym $mod+Return exec $term

    # Wlogout screen
    bindsym $mod+Escape exec wlogout

    # Start ranger on $term 
    bindsym $mod+Shift+Return exec $term -t ranger -e ranger

    # Start btm on $term with ctrl+alt+delete 
    bindsym ctrl+Mod1+Delete exec $term -t btop -e btop

    # Toggle control center
    bindsym $mod+Shift+d exec swaync-client -t -sw

    # Switch to lab_lan 
    bindsym $mod+n exec nmcli con up lab_lan

    # Switch to LAN 
    bindsym $mod+Shift+n exec nmcli con up LAN

    # Mirror $laptop_mon
    bindsym $mod+m exec $term -e wl-mirror $laptop_mon

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Brightness control 
    bindsym XF86MonBrightnessDown exec --no-startup-id light -U 1
    bindsym XF86MonBrightnessUp exec --no-startup-id light -A 1 

    # Pulse audio sound control
    bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -c ~/.config/swaynag/config -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # Move focused container to next monitor 
    bindsym $mod+ctrl+Left move container to output left
    bindsym $mod+ctrl+$left move container to output left
    bindsym $mod+ctrl+Right move container to output right
    bindsym $mod+ctrl+$right move container to output right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Switch to the next/previous workspace
    bindsym $mod+bracketleft workspace prev
    bindsym $mod+bracketright workspace next
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    # Move focused container to the next/previous workspace
    bindsym $mod+Shift+bracketleft move container to workspace prev
    bindsym $mod+Shift+bracketright move container to workspace next

    # Three finger left and right swipe to switch workspace without overwriting device '*'
    bindsym --whole-window --release BTN_LEFT+BTN_RIGHT+BTN_MIDDLE workspace prev
    bindsym --whole-window --release BTN_LEFT+BTN_RIGHT+BTN_SIDE workspace next

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    bindsym $left resize shrink width 30px
    bindsym $down resize grow height 30px
    bindsym $up resize shrink height 30px
    bindsym $right resize grow width 30px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 30px
    bindsym Down resize grow height 30px
    bindsym Up resize shrink height 30px
    bindsym Right resize grow width 30px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Screenshots
#
bindsym Print exec grim -g "$(slurp)" - | wl-copy
# Save screenshot in ~/Pictures/Screenshots
# bindsym $mod+Print exec grim -g "$(slurp)" ~/Pictures/Screenshots/$(date +%Y-%m-%d-%H-%M-%S).png
bindsym $mod+Print exec bash -c 'focused_window=$(swaymsg -t get_tree | jq -r ".. | select(.focused?) | .name"); grim -g "$(slurp)" ~/Pictures/Screenshots/$(date +%Y-%m-%d-%H-%M-%S)_${focused_window// /_}.png'

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
   swaybar_command waybar 
}

include /etc/sway/config.d/*
